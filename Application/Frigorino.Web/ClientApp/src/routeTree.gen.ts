/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ListsIndexRouteImport } from './routes/lists/index'
import { Route as InventoriesIndexRouteImport } from './routes/inventories/index'
import { Route as ListsCreateRouteImport } from './routes/lists/create'
import { Route as InventoriesCreateRouteImport } from './routes/inventories/create'
import { Route as HouseholdManageRouteImport } from './routes/household/manage'
import { Route as HouseholdCreateRouteImport } from './routes/household/create'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as ListsListIdViewRouteImport } from './routes/lists/$listId/view'
import { Route as ListsListIdEditRouteImport } from './routes/lists/$listId/edit'
import { Route as InventoriesInventoryIdViewRouteImport } from './routes/inventories/$inventoryId/view'
import { Route as InventoriesInventoryIdEditRouteImport } from './routes/inventories/$inventoryId/edit'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsIndexRoute = ListsIndexRouteImport.update({
  id: '/lists/',
  path: '/lists/',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoriesIndexRoute = InventoriesIndexRouteImport.update({
  id: '/inventories/',
  path: '/inventories/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsCreateRoute = ListsCreateRouteImport.update({
  id: '/lists/create',
  path: '/lists/create',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoriesCreateRoute = InventoriesCreateRouteImport.update({
  id: '/inventories/create',
  path: '/inventories/create',
  getParentRoute: () => rootRouteImport,
} as any)
const HouseholdManageRoute = HouseholdManageRouteImport.update({
  id: '/household/manage',
  path: '/household/manage',
  getParentRoute: () => rootRouteImport,
} as any)
const HouseholdCreateRoute = HouseholdCreateRouteImport.update({
  id: '/household/create',
  path: '/household/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsListIdViewRoute = ListsListIdViewRouteImport.update({
  id: '/lists/$listId/view',
  path: '/lists/$listId/view',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsListIdEditRoute = ListsListIdEditRouteImport.update({
  id: '/lists/$listId/edit',
  path: '/lists/$listId/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoriesInventoryIdViewRoute =
  InventoriesInventoryIdViewRouteImport.update({
    id: '/inventories/$inventoryId/view',
    path: '/inventories/$inventoryId/view',
    getParentRoute: () => rootRouteImport,
  } as any)
const InventoriesInventoryIdEditRoute =
  InventoriesInventoryIdEditRouteImport.update({
    id: '/inventories/$inventoryId/edit',
    path: '/inventories/$inventoryId/edit',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/household/create': typeof HouseholdCreateRoute
  '/household/manage': typeof HouseholdManageRoute
  '/inventories/create': typeof InventoriesCreateRoute
  '/lists/create': typeof ListsCreateRoute
  '/inventories': typeof InventoriesIndexRoute
  '/lists': typeof ListsIndexRoute
  '/inventories/$inventoryId/edit': typeof InventoriesInventoryIdEditRoute
  '/inventories/$inventoryId/view': typeof InventoriesInventoryIdViewRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/view': typeof ListsListIdViewRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/household/create': typeof HouseholdCreateRoute
  '/household/manage': typeof HouseholdManageRoute
  '/inventories/create': typeof InventoriesCreateRoute
  '/lists/create': typeof ListsCreateRoute
  '/inventories': typeof InventoriesIndexRoute
  '/lists': typeof ListsIndexRoute
  '/inventories/$inventoryId/edit': typeof InventoriesInventoryIdEditRoute
  '/inventories/$inventoryId/view': typeof InventoriesInventoryIdViewRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/view': typeof ListsListIdViewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/household/create': typeof HouseholdCreateRoute
  '/household/manage': typeof HouseholdManageRoute
  '/inventories/create': typeof InventoriesCreateRoute
  '/lists/create': typeof ListsCreateRoute
  '/inventories/': typeof InventoriesIndexRoute
  '/lists/': typeof ListsIndexRoute
  '/inventories/$inventoryId/edit': typeof InventoriesInventoryIdEditRoute
  '/inventories/$inventoryId/view': typeof InventoriesInventoryIdViewRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/view': typeof ListsListIdViewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/login'
    | '/household/create'
    | '/household/manage'
    | '/inventories/create'
    | '/lists/create'
    | '/inventories'
    | '/lists'
    | '/inventories/$inventoryId/edit'
    | '/inventories/$inventoryId/view'
    | '/lists/$listId/edit'
    | '/lists/$listId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/login'
    | '/household/create'
    | '/household/manage'
    | '/inventories/create'
    | '/lists/create'
    | '/inventories'
    | '/lists'
    | '/inventories/$inventoryId/edit'
    | '/inventories/$inventoryId/view'
    | '/lists/$listId/edit'
    | '/lists/$listId/view'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/about'
    | '/auth/login'
    | '/household/create'
    | '/household/manage'
    | '/inventories/create'
    | '/lists/create'
    | '/inventories/'
    | '/lists/'
    | '/inventories/$inventoryId/edit'
    | '/inventories/$inventoryId/view'
    | '/lists/$listId/edit'
    | '/lists/$listId/view'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRoute
  AboutRoute: typeof AboutRoute
  AuthLoginRoute: typeof AuthLoginRoute
  HouseholdCreateRoute: typeof HouseholdCreateRoute
  HouseholdManageRoute: typeof HouseholdManageRoute
  InventoriesCreateRoute: typeof InventoriesCreateRoute
  ListsCreateRoute: typeof ListsCreateRoute
  InventoriesIndexRoute: typeof InventoriesIndexRoute
  ListsIndexRoute: typeof ListsIndexRoute
  InventoriesInventoryIdEditRoute: typeof InventoriesInventoryIdEditRoute
  InventoriesInventoryIdViewRoute: typeof InventoriesInventoryIdViewRoute
  ListsListIdEditRoute: typeof ListsListIdEditRoute
  ListsListIdViewRoute: typeof ListsListIdViewRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/': {
      id: '/lists/'
      path: '/lists'
      fullPath: '/lists'
      preLoaderRoute: typeof ListsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventories/': {
      id: '/inventories/'
      path: '/inventories'
      fullPath: '/inventories'
      preLoaderRoute: typeof InventoriesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/create': {
      id: '/lists/create'
      path: '/lists/create'
      fullPath: '/lists/create'
      preLoaderRoute: typeof ListsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventories/create': {
      id: '/inventories/create'
      path: '/inventories/create'
      fullPath: '/inventories/create'
      preLoaderRoute: typeof InventoriesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/household/manage': {
      id: '/household/manage'
      path: '/household/manage'
      fullPath: '/household/manage'
      preLoaderRoute: typeof HouseholdManageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/household/create': {
      id: '/household/create'
      path: '/household/create'
      fullPath: '/household/create'
      preLoaderRoute: typeof HouseholdCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/$listId/view': {
      id: '/lists/$listId/view'
      path: '/lists/$listId/view'
      fullPath: '/lists/$listId/view'
      preLoaderRoute: typeof ListsListIdViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/$listId/edit': {
      id: '/lists/$listId/edit'
      path: '/lists/$listId/edit'
      fullPath: '/lists/$listId/edit'
      preLoaderRoute: typeof ListsListIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventories/$inventoryId/view': {
      id: '/inventories/$inventoryId/view'
      path: '/inventories/$inventoryId/view'
      fullPath: '/inventories/$inventoryId/view'
      preLoaderRoute: typeof InventoriesInventoryIdViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventories/$inventoryId/edit': {
      id: '/inventories/$inventoryId/edit'
      path: '/inventories/$inventoryId/edit'
      fullPath: '/inventories/$inventoryId/edit'
      preLoaderRoute: typeof InventoriesInventoryIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRoute,
  AboutRoute: AboutRoute,
  AuthLoginRoute: AuthLoginRoute,
  HouseholdCreateRoute: HouseholdCreateRoute,
  HouseholdManageRoute: HouseholdManageRoute,
  InventoriesCreateRoute: InventoriesCreateRoute,
  ListsCreateRoute: ListsCreateRoute,
  InventoriesIndexRoute: InventoriesIndexRoute,
  ListsIndexRoute: ListsIndexRoute,
  InventoriesInventoryIdEditRoute: InventoriesInventoryIdEditRoute,
  InventoriesInventoryIdViewRoute: InventoriesInventoryIdViewRoute,
  ListsListIdEditRoute: ListsListIdEditRoute,
  ListsListIdViewRoute: ListsListIdViewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
